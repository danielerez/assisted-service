// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-service/pkg/k8sclient (interfaces: K8sApiExtensionsClientFactory)

// Package k8sclient is a generated GoMock package.
package k8sclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
	clientset "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset"
)

// MockK8sApiExtensionsClientFactory is a mock of K8sApiExtensionsClientFactory interface.
type MockK8sApiExtensionsClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockK8sApiExtensionsClientFactoryMockRecorder
}

// MockK8sApiExtensionsClientFactoryMockRecorder is the mock recorder for MockK8sApiExtensionsClientFactory.
type MockK8sApiExtensionsClientFactoryMockRecorder struct {
	mock *MockK8sApiExtensionsClientFactory
}

// NewMockK8sApiExtensionsClientFactory creates a new mock instance.
func NewMockK8sApiExtensionsClientFactory(ctrl *gomock.Controller) *MockK8sApiExtensionsClientFactory {
	mock := &MockK8sApiExtensionsClientFactory{ctrl: ctrl}
	mock.recorder = &MockK8sApiExtensionsClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sApiExtensionsClientFactory) EXPECT() *MockK8sApiExtensionsClientFactoryMockRecorder {
	return m.recorder
}

// CreateFromInClusterConfig mocks base method.
func (m *MockK8sApiExtensionsClientFactory) CreateFromInClusterConfig() (clientset.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFromInClusterConfig")
	ret0, _ := ret[0].(clientset.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFromInClusterConfig indicates an expected call of CreateFromInClusterConfig.
func (mr *MockK8sApiExtensionsClientFactoryMockRecorder) CreateFromInClusterConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFromInClusterConfig", reflect.TypeOf((*MockK8sApiExtensionsClientFactory)(nil).CreateFromInClusterConfig))
}

// CreateFromSecret mocks base method.
func (m *MockK8sApiExtensionsClientFactory) CreateFromSecret(arg0 *v1.Secret) (clientset.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFromSecret", arg0)
	ret0, _ := ret[0].(clientset.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFromSecret indicates an expected call of CreateFromSecret.
func (mr *MockK8sApiExtensionsClientFactoryMockRecorder) CreateFromSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFromSecret", reflect.TypeOf((*MockK8sApiExtensionsClientFactory)(nil).CreateFromSecret), arg0)
}
