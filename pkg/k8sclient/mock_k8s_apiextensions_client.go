// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-service/pkg/k8sclient (interfaces: K8sApiExtensionsClient)

// Package k8sclient is a generated GoMock package.
package k8sclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1beta1"
	discovery "k8s.io/client-go/discovery"
)

// MockK8sApiExtensionsClient is a mock of K8sApiExtensionsClient interface.
type MockK8sApiExtensionsClient struct {
	ctrl     *gomock.Controller
	recorder *MockK8sApiExtensionsClientMockRecorder
}

// MockK8sApiExtensionsClientMockRecorder is the mock recorder for MockK8sApiExtensionsClient.
type MockK8sApiExtensionsClientMockRecorder struct {
	mock *MockK8sApiExtensionsClient
}

// NewMockK8sApiExtensionsClient creates a new mock instance.
func NewMockK8sApiExtensionsClient(ctrl *gomock.Controller) *MockK8sApiExtensionsClient {
	mock := &MockK8sApiExtensionsClient{ctrl: ctrl}
	mock.recorder = &MockK8sApiExtensionsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sApiExtensionsClient) EXPECT() *MockK8sApiExtensionsClientMockRecorder {
	return m.recorder
}

// ApiextensionsV1 mocks base method.
func (m *MockK8sApiExtensionsClient) ApiextensionsV1() v1.ApiextensionsV1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApiextensionsV1")
	ret0, _ := ret[0].(v1.ApiextensionsV1Interface)
	return ret0
}

// ApiextensionsV1 indicates an expected call of ApiextensionsV1.
func (mr *MockK8sApiExtensionsClientMockRecorder) ApiextensionsV1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApiextensionsV1", reflect.TypeOf((*MockK8sApiExtensionsClient)(nil).ApiextensionsV1))
}

// ApiextensionsV1beta1 mocks base method.
func (m *MockK8sApiExtensionsClient) ApiextensionsV1beta1() v1beta1.ApiextensionsV1beta1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApiextensionsV1beta1")
	ret0, _ := ret[0].(v1beta1.ApiextensionsV1beta1Interface)
	return ret0
}

// ApiextensionsV1beta1 indicates an expected call of ApiextensionsV1beta1.
func (mr *MockK8sApiExtensionsClientMockRecorder) ApiextensionsV1beta1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApiextensionsV1beta1", reflect.TypeOf((*MockK8sApiExtensionsClient)(nil).ApiextensionsV1beta1))
}

// Discovery mocks base method.
func (m *MockK8sApiExtensionsClient) Discovery() discovery.DiscoveryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery.
func (mr *MockK8sApiExtensionsClientMockRecorder) Discovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockK8sApiExtensionsClient)(nil).Discovery))
}
